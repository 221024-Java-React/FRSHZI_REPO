package DAO;

import java.awt.Image;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import Model.Person;
import Utils.JDBCConnectionUtil;

public class AuthDAO implements IAuthDAO{
	private JDBCConnectionUtil conUtil = JDBCConnectionUtil.getInstance();
	Connection connection = conUtil.getConnection();
	
	public Person LoginWithUsernameAndPassword(String username, String password) {
		// TODO Auto-generated method stub
		return null;
	}

	public boolean RegisterWithUsernameAndPassword(Person user) {
		
			
			try {
				if(checkEmailIsAvailable(user.getEmail()))
				{
				String sql;
				PreparedStatement prepared;
				int address_id = insertAddress(user);
				
				 sql = "insert into Person(name, email, password,picture, address_id, role_id)"
						+ "VALUES (?,?,?,?,?,?)";
				
			    prepared = connection.prepareStatement(sql);
				
				int role = user.getRole().ordinal() + 1;
				
				prepared.setString(1,  user.getName());
				prepared.setString(2, user.getEmail());
				prepared.setString(3, user.getPassword());
				prepared.setString(4,  user.getPicture());
				prepared.setInt(5, address_id);
				prepared.setInt(6, role);
				
				prepared.execute();
				}
			} catch(SQLException e) {
				e.printStackTrace();
			}
			
		return false;	
		}

	private int insertAddress(Person user) throws SQLException {
		String sql = "insert into Address(street, city, state,zipcode)"
				+ "VALUES (?,?,?,?)";
		PreparedStatement prepared = connection.prepareStatement(sql);
		
		prepared.setString(1,  user.getAddress().getStreet());
		prepared.setString(2, user.getAddress().getCity());
		prepared.setString(3, user.getAddress().getState());
		prepared.setInt(4,  user.getAddress().getZipcode());
		prepared.execute();
		
		 sql = "select Max(address_id) from Address";
		 prepared = connection.prepareStatement(sql);
		 ResultSet result = prepared.executeQuery();
		 int address_id=0;
		 if(result.next()) address_id = result.getInt(1);
		return address_id;
	}
		
	

	public boolean checkEmailIsAvailable(String email) {
		String sql = "select * from Person where email="+email;
		PreparedStatement prepared = connection.prepareStatement(sql);
		 ResultSet result = prepared.executeQuery();
		 if(result.next()) return false;
		return true;
	}

	public boolean updateUserProfile(Person user) {
		// TODO Auto-generated method stub
		return false;
	}

	public boolean uploadUserPicture(Image image) {
		// TODO Auto-generated method stub
		return false;
	}

	public boolean ManagerChangeRole(Person user) {
		// TODO Auto-generated method stub
		return false;
	}




}
