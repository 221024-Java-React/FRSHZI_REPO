package DAO;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import Model.Person;
import Model.Ticket;
import Model.TicketStatus;
import Model.TicketType;
import Utils.JDBCConnectionUtil;

public class TicketDAO implements ITicketDAO {

	private JDBCConnectionUtil conUtil = JDBCConnectionUtil.getInstance();
	Connection connection = conUtil.getConnection();
	String sql = "";
	PreparedStatement prepared;

	public List<Ticket> getTicketsByType(int employee_id, int type) {
		// TODO Auto-generated method stub
		return null;
	}

	public boolean submitNewTicketByEmloyee(Ticket ticket) {
		try {
			sql = "insert into ticket (amount, description, employee_id, status_id, type_id, receipt_image, created_date) VALUES (?,?,?,?,?,?,?)";
			prepared = connection.prepareStatement(sql);

			int status = ticket.getStatus().ordinal() + 1;
			int type = ticket.getType().ordinal() + 1;

			LocalDateTime now = LocalDateTime.now();
			Timestamp timestamp = Timestamp.valueOf(now);

			prepared.setDouble(1, ticket.getAmount());
			prepared.setString(2, ticket.getDescription());
			prepared.setInt(3, Person.getID());
			prepared.setInt(4, status);
			prepared.setInt(5, type);
			prepared.setString(6, "");
			prepared.setTimestamp(7, timestamp);
			int affectedRows = prepared.executeUpdate();
			if (affectedRows > 0)
				return true;
			return false;
		} catch (Exception e1) {
			System.out.println("Cannot submit a ticket");
			e1.printStackTrace();
			return false;
		}
	}

	public List<Ticket> getPendingTickets() {
		// TODO Auto-generated method stub
		return null;
	}

	public List<Ticket> viewTicketHistory(int employeeID) {
		Ticket ticket = null;
		List<Ticket> tickets = new ArrayList<>();
		sql = "SELECT * FROM ticket WHERE employee_id=?";
		try {
			prepared = connection.prepareStatement(sql);
			prepared.setInt(1, employeeID);

			ResultSet result = prepared.executeQuery();
			while (result.next()) {
				ticket = new Ticket();
				ticket.setID(result.getInt(1));
				ticket.setAmount(result.getDouble(2));
				ticket.setDescription(result.getString(3));
				ticket.setEmployee_id(result.getInt(4));
				if (result.getInt(5) == 1)
					ticket.setStatus(TicketStatus.PENDING);
				else if (result.getInt(5) == 2)
					ticket.setStatus(TicketStatus.APPROVED);
				else
					ticket.setStatus(TicketStatus.DENIED);
				if (result.getInt(6) == 1)
					ticket.setType(TicketType.TRAVEL);
				else if (result.getInt(6) == 2)
					ticket.setType(TicketType.LODGING);
				else if (result.getInt(6) == 3)
					ticket.setType(TicketType.FOOD);
				else
					ticket.setType(TicketType.OTHER);
				ticket.setReceipt_image(result.getString(7));
				ticket.setCreated_date(result.getTimestamp(8));
				tickets.add(ticket);
				System.out.println(ticket.toString());
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return tickets;
	}

	public boolean processPendingTicket(Ticket ticket) {
		// TODO Auto-generated method stub
		return false;
	}

}
